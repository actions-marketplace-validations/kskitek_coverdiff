name: Test coverage report
concurrency:
  cancel-in-progress: true
  group: coverdiff-${{ github.ref }}

on: [pull_request]

jobs:
  main:
    name: Coverage
    runs-on: ubuntu-latest
    steps:
    - name: 'Checkout A'
      uses: actions/checkout@v3
      with:
        ref: ${{ github.event.pull_request.head.sha }}
        fetch-depth: '1'
    - name: 'Setup Golang'
      uses: actions/setup-go@v3
      with:
        go-version: '1.20'
    - name: 'Generate coverage A'
      run: go test -cover ./... | grep -v "no test files" | awk '{print $2,$5}' | sed -e 's/%//' > a.cover
    - name: 'Save A coverage'
      uses: actions/cache/save@v3
      with:
        path: |
          a.cover
        key: cover-${{github.run_id}}
    - name: 'Checkout B'
      uses: actions/checkout@v3
      with:
        # ref: ${{ inputs.base }} TODO
        #ref: main
        fetch-depth: '1'
    - run: git checkout origin/main
    - name: 'Generate coverage B'
      run: go test -cover ./... | grep -v "no test files" | awk '{print $2,$5}' | sed -e 's/%//' > b.cover
    - name: 'Restore A coverage'
      uses: actions/cache/restore@v3
      with:
        path: |
          a.cover
        key: cover-${{github.run_id}}
    - name: 'Generate diff'
      run: |
        cat a.cover > sum.cover
        cat b.cover >> sum.cover
        cat sum.cover
        cat sum.cover | sort | uniq -u > changes
        echo "## changes:"
        awk 'NR % 2 != 0 {pkg=$1; a=$2} NR % 2 == 0 {b=$2; if (a < b) {printf "%s %d% -> %d%", pkg,a,b}}'
